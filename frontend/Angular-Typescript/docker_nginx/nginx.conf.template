daemon off;

worker_processes auto;

events {
  worker_connections 8192;
}

http {
  include mime.types;
  default_type application/octet-stream;
  server_names_hash_bucket_size 128;
  # resolver __resolver1__ valid=10s;

  gzip on;
  gzip_disable "msie6";
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
  gzip_min_length 256;

  keepalive_timeout  65;
  sendfile on;


  server {
    listen 80;
    root /usr/share/nginx/html/;
    index index.html;
    # set ${BACKEND_URL} ;
    proxy_connect_timeout 36000s;
    proxy_send_timeout 36000s;
    proxy_read_timeout 86400s;
    keepalive_timeout 36000s;

    # cache assets
    location ^~ /assets/ {
      expires max;
      add_header Cache-Control "public";
    }

    # cache js
    location ~* \.(js) {
      expires max;
      add_header Cache-Control "public";
    }

    # cache css
    location ~* \.(css) {
      expires max;
      add_header Cache-Control "public";
    }

    # do not cache these types of files
    location ~* \.(html)$ {
      expires -1;
      if_modified_since off;
      add_header Last-Modified "";
      add_header Pragma "no-cache";
      add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
    }

    # do not cache favicon.ico
    location ~* \.(ico)$ {
      expires -1;
      if_modified_since off;
      add_header Last-Modified "";
      add_header Pragma "no-cache";
      add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
    }

    location / {
      expires max;
      add_header Cache-Control "public";

      try_files $uri $uri/ /index.html =404;
    }

#    location /api {
##      rewrite ^/api/(.*) /$1 break;
#      proxy_pass ${BACKEND_URL}:8080/api/$uri$is_args$args;
#      expires off;
#    }

    location /api/ {
      proxy_pass ${BACKEND_URL};
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
    }

  }

}
